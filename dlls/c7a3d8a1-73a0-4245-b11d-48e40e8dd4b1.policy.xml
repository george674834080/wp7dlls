<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) Microsoft Corporation.  All rights reserved.
-->
<CeSecurityPolicyFile Description="Default file system security policy" Vendor="Microsoft" RequiredOSVersion="7.00" FileVersion="7.4.9876" xmlns="urn:Microsoft.PlatformBuilder/CeSecurityPolicy">

  
<!--Begin Generated accounts and routing/authz rules for S-1-5-112-0-0X10-0X00000014 -->
<Macro Id="SSUPDATE_EXE_SID" Value="S-1-5-112-0-0X10-0X00000014" />
<Account Id="$(SSUPDATE_EXE_SID)" FriendlyName="ssupdate.exe" Description="Autogenerated chamber for ssupdate.exe" Type="User">
<MemberOfGroup GroupAccountId="$(ELEVATED_RIGHTS_CHAMBER_GROUP_NAME)" />
</Account>
<!--Begin Generated routing/authz rules for ssupdate.exe -->
<Rule Description="Route ssupdate.exe" ResourceIri="$(LOADERVERIFIER_ROUTE_BY_NAME)/PRIMARY/WINDOWS/SSUPDATE.EXE" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_LOW">
<Authorize>
<Match AccountId="$(SSUPDATE_EXE_SID)" AuthorizationIds="LV_ACCESS_EXECUTE" />
</Authorize>
</Rule>
<Rule Description="Authorize ssupdate.exe be loadable to $(SSUPDATE_EXE_SID) and  chambers" ResourceIri="$(LOADERVERIFIER_EXE_AUTHZ_INROM_ROOT)/WINDOWS/SSUPDATE.EXE" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
<Authorize>
<Match AccountId="$(SSUPDATE_EXE_SID)" AuthorizationIds="LV_ACCESS_EXECUTE,LV_ACCESS_LOAD" />
</Authorize>
</Rule>
<!--End Generated routing/authz rules for ssupdate.exe -->
<!--End Generated accounts and routing/authz rules for S-1-5-112-0-0X10-0X00000014 -->


  
<!--Begin Generated accounts and routing/authz rules for $(SYSTEM_USER_NAME) -->

<!--Begin Generated routing/authz rules for TELSHELL.EXE -->
<Rule Description="Route TELSHELL.EXE" ResourceIri="$(LOADERVERIFIER_ROUTE_BY_NAME)/PRIMARY/WINDOWS/TELSHELL.EXE" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_LOW">
<Authorize>
<Match AccountId="$(SYSTEM_USER_NAME)" AuthorizationIds="LV_ACCESS_EXECUTE" />
</Authorize>
</Rule>
<Rule Description="Authorize TELSHELL.EXE be loadable to $(SYSTEM_USER_NAME) and  chambers" ResourceIri="$(LOADERVERIFIER_EXE_AUTHZ_INROM_ROOT)/WINDOWS/TELSHELL.EXE" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
<Authorize>
<Match AccountId="$(SYSTEM_USER_NAME)" AuthorizationIds="LV_ACCESS_EXECUTE,LV_ACCESS_LOAD" />
</Authorize>
</Rule>
<!--End Generated routing/authz rules for TELSHELL.EXE -->
<!--End Generated accounts and routing/authz rules for $(SYSTEM_USER_NAME) -->

  
    <Rule Description="Protects access to secure shell notifications" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/NOTIFICATION" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">

        <Authorize>
            <Match AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="GENERIC_ALL"></Match>
            <Match AccountId="$(STANDARD_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="GENERIC_READ"></Match>
        </Authorize>
        <Stop>
          <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
        </Stop>
    </Rule>

 <Rule Description="Prevent all non-TCB apps from reading/writing to the OOM hive" ResourceIri="$(HKLM)/SYSTEM/OOM/(*)" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Stop>
      <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
    </Stop>
  </Rule>


 <Rule Description="Allow supervisor apps to send messages to telshell which they normally couldn't" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/RestrictedWindowMessages" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

 <Rule Description="Rule to restrict the callers of the shell API SHTriggerShellAction" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHTriggerShellAction" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

 <Rule Description="Rule to restrict the callers of the shell API SHCloseSession" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHCloseSession" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>
  
 <Rule Action="CreateNew" Description="Rule to restrict the callers of the debug APIs" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHDebugAPIs" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the debug query APIs" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHDebugQueryAPIs" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(STANDARD_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHSendCallback" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SendCallback" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHSetTestScene" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHSetTestScene" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHSetDebugOverlay" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHSetDebugOverlay" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
        <Authorize>
            <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
        </Authorize>
    </Rule>
    
   <Rule Action="CreateNew" Description="Rule to restrict the callers of the MessageBox API. It is now only supported for test applications." ResourceIri="$(GLOBAL_RESOURCES)/SHELL/MessageBox" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>
  
  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHUpdateAuthenticationData" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHUpdateAuthenticationData" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHLock" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHLock" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(MULTIMEDIA_SUPERVISOR_SELF_ISOLATED)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API RegisterShellHwnd" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/RegisterShellHwnd" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
      <Authorize>
        <Match Action="Add" AccountId="$(STANDARD_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHWipeDevice" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHWipeDevice" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
      <Authorize>
        <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Protects the registry keys that store replaceable icons" ResourceIri="$(HKLM)/Security/ResOver/Bitmaps/(*)" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
      <Stop>
          <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
      </Stop>
  </Rule>

  <Rule Action="CreateNew" Description="Protects the registry keys that customize data connection type strings" ResourceIri="$(HKLM)/Software/Microsoft/Connectivity/CellularUx/DataConnectionIcon/(*)" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
        <Authorize>
          <Match Action="Add" AccountId="$(EVERYONE_GROUP_NAME)" AuthorizationIds="KEY_READ"></Match>
        </Authorize>
        <Stop>
            <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
        </Stop>
  </Rule>
  
  <Rule Action="CreateNew" Description="Protects the registry key that controls the battery level icon" ResourceIri="$(HKLM)/System/State/BatteryUX/(*)" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
        <Stop>
          <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
        </Stop>
  </Rule>

  <Rule Action="CreateNew" Description="Protects the registry keys that store user specific shell configuration" ResourceIri="$(HKCU)/Software/Microsoft/Shell/(*)" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Stop>
      <Match AccountId="$(EVERYONE_GROUP_NAME)"></Match>
    </Stop>
  </Rule>

   <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SetWelcomeWizardStatus" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SetWelcomeWizardStatus" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SetRestrictHardwareKeys" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SetRestrictHardwareKeys" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  
  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SetOEMAppsInstalledStatus" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SetOEMAppsInstalledStatus" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Description="Allow supervisor apps to manipulate pages/tasks that they don't own" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/TaskModelAccess" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match AccountId="$(ELEVATED_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of certain test-only APIs to TCB-only" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/SHTestAPIs" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(SYSTEM_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

  <Rule Action="CreateNew" Description="Rule to restrict the callers of the shell API SHCreateShellEventListener" ResourceIri="$(GLOBAL_RESOURCES)/SHELL/ShellEvents" SpeakerAccountId="$(SYSTEM_USER_NAME)" PriorityCategoryId="PRIORITY_STANDARD">
    <Authorize>
      <Match Action="Add" AccountId="$(STANDARD_RIGHTS_RESOURCE_GROUP_NAME)" AuthorizationIds="ALL_ACCESS"></Match>
    </Authorize>
  </Rule>

</CeSecurityPolicyFile>
